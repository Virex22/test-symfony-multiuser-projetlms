security:
    enable_authenticator_manager: true
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\UserOne:
            algorithm: auto
        App\Entity\UserTwo:
            algorithm: auto


    providers:
        # Le provider du premier utilisateur
        app_one_provider:
            entity:
                class: App\Entity\UserOne
                property: email
        # Le provider du deuxieme utilisateur
        app_two_provider:
            entity:
                class: App\Entity\UserTwo
                property: email
        # Le provider qui va mélanger les deux autres providers
        all_users:
            chain:
                providers: ['app_one_provider', 'app_two_provider']
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            # Choix du provider pour le premier pare-feu, ici celui qui gèrent notre seul page de login
            provider: all_users
            custom_authenticator: App\Security\AppAuthenticator
            logout:
                path: app_logout

    # gestion de la sécurité des routes
    access_control:
        -   { path: ^/one, roles: ROLE_ONE }
        -   { path: ^/two, roles: ROLE_TWO }
        -   { path: ^/both, roles: [ROLE_ONE,ROLE_TWO] }

when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
